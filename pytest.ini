[pytest]
# Test discovery - include both evaluation and routing tests
testpaths = src/evaluation/tests tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers - combined from both
markers =
    unit: Unit tests for individual components
    integration: Integration tests with multiple components
    slow: Slow tests that take significant time
    requires_ollama: Tests that require Ollama to be running
    requires_gliner: Tests that require GLiNER models
    phoenix: Tests requiring Phoenix
    inspect: Tests requiring Inspect AI
    ragas: Tests requiring RAGAS
    asyncio: Async tests
    local_only: Tests that should only run locally (not in CI/CD)
    requires_models: Tests that require actual ML models to be available
    benchmark: Performance benchmarking tests

# Output options - merged
addopts = 
    -ra
    -v
    --tb=short
    --strict-markers
    --cov=src/evaluation
    --cov=src/app/routing
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-config=pytest.ini

# Asyncio support for routing tests
asyncio_mode = auto

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

[coverage:run]
source = 
    src/evaluation
    src/app/routing
omit = 
    */tests/integration/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.: