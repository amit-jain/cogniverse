[pytest]
# Test discovery - include evaluation, routing, and ingestion tests
testpaths = src/evaluation/tests tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers - combined from evaluation, routing, and ingestion
markers =
    unit: Unit tests for individual components
    integration: Integration tests with multiple components
    slow: Slow tests that take significant time
    requires_ollama: Tests that require Ollama to be running
    requires_gliner: Tests that require GLiNER models
    phoenix: Tests requiring Phoenix
    inspect: Tests requiring Inspect AI
    ragas: Tests requiring RAGAS
    asyncio: Async tests
    local_only: Tests that should only run locally (not in CI/CD)
    requires_models: Tests that require actual ML models to be available
    benchmark: Performance benchmarking tests
    ingestion: Tests for ingestion pipeline
    requires_vespa: Tests that require Vespa backend to be running
    requires_docker: Tests that require Docker
    requires_gpu: Tests that require GPU availability
    requires_colpali: Tests that require ColPali models
    requires_videoprism: Tests that require VideoPrism models
    requires_colqwen: Tests that require ColQwen models
    requires_whisper: Tests that require Whisper models
    requires_cv2: Tests that require OpenCV
    requires_ffmpeg: Tests that require FFmpeg
    ci_safe: Tests that are safe to run in CI environment
    ci_fast: Fast, essential tests for CI (subset of most important functionality)
    timeout: Tests with custom timeout values
    e2e: End-to-end integration tests with real services

# Output options - no global coverage (use module-specific configs)
addopts = 
    -ra
    -v
    --tb=short
    --strict-markers

# Asyncio support for routing tests
asyncio_mode = auto

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Coverage configuration removed - use module-specific configs instead